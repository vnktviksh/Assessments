# -*- coding: utf-8 -*-
"""LVADSUSR196_Venkat_Vikash.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pTRxG4AQdnjlv6ZBTZr-KhVA38gT_xwN

Import
"""

import numpy as np
import pandas as pd

"""**Question 1**"""

arr = [12,23,45,67,88,90]
arr = np.array(arr)
print("Maximium",np.max(arr))
print("Sum",np.sum(arr))
print("Minimum",np.min(arr))
print("Mean",np.mean(arr))
print("Standard deviation",np.std(arr))

"""**Question 2**"""

def normalize(data):
    mean = np.mean(data, axis=0)
    std = np.std(data, axis=0)

    norm = (data - mean) / std

    return norm

health_data = np.array([[160, 70, 30],   # height, weight, age for individual 1
                        [165, 65, 35],   # height, weight, age for individual 2
                        [170, 75, 40]])  # height, weight, age for individual 3

norm = normalize(health_data)
print(normalized_data)

"""**Question 3**"""

def avg(scores):
    last3 = scores[:, -3:]
    valid_scores = np.ma.masked_equal(last3, -1)
    avg_score = valid_scores.mean(axis=1)

    return avg_score

scores = np.array([[70,75,80,95,99], [45,65,76,88,90],[34,20,45,-1,65]])
average = avg(scores)
print(average)

"""**Question 4**"""

#24 equally spaceed measurements
arr = np.linspace(15,25,24)
arr

"""**Question 5**"""

daily_closing_prices = np.array([100, 102, 98, 105, 107, 110, 108, 112, 115, 118, 120])
df = pd.DataFrame(daily_closing_prices)
window_size = 5
moving_average = df.rolling(window=window_size).mean()
print(moving_average)

"""**Question 6**"""

np.

"""**Question 7**"""

properties_matrix = np.array([[1, 2, 3],
                              [4, 5, 6],
                              [7, 8, 9]])
dig = np.diag(properties_matrix)

"""**Question 8**"""

arr = np.array([[12,3,45],[22,33,2],[34,4,3]])
for i in range(len(arr)):
  for j in range(len(arr)):
    if arr[i][j]<5:
      x = arr[i][j]

print(x)

"""**Question 9**"""

data = {'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace'],
        'Age': [25, 30, 35, 40, 45, 50, 55],
        'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Miami', 'Boston'],
        'Department': ['HR', 'IT', 'Finance', 'Marketing', 'Sales', 'IT', 'HR']}

df = pd.DataFrame(data)
filtered_df = df[(df['Age']<45) & (df['Department']!="HR")]
filtered_df

"""**Question 10**"""

data = {'Department': ['Electronics', 'Electronics', 'Clothing', 'Clothing', 'Home Goods'],
        'Salesperson': ['Alice', 'Bob', 'Charlie', 'David', 'Eve'],
        'Sales': [70000, 50000, 30000, 40000, 60000]}

df = pd.DataFrame(data)
filtered_df = df.groupby(['Salesperson','Department']).agg(
    avg_sales_dept = ('Sales','mean')
)

bins = [30000,50000,70000,float('inf')]
labels = ["low","medium","high"]

filtered_df["Rank"] = pd.cut(filtered_df['avg_sales_dept'],bins=bins,labels=labels,right=False)

filtered_df

"""**Question 11**"""

data = {
    'Product': ['Apples', 'Bananas', 'Cherries', 'Dates', 'Elderberries', 'Flour', 'Grapes'],
    'Category': ['Fruit', 'Fruit', 'Fruit', 'Fruit', 'Fruit', 'Bakery', 'Fruit'],
    'Price': [1.20, 0.50, 3.00, 2.50, 4.00, 1.50, 2.00],
    'Promotion': [True, False, True, True, False, True, False]
}

df = pd.DataFrame(data)
df

filtered_df = df[(df['Category']=="Fruit")] #getting fruit
avg_price = filtered_df['Price'].mean()
filtered_df = filtered_df[(filtered_df['Price']>avg_price)&(filtered_df['Promotion']==False)]
filtered_df

"""**Question 12**"""

employee_data = {
    'Employee': ['Alice', 'Bob', 'Charlie', 'David'],
    'Department': ['HR', 'IT', 'Finance', 'IT'],
    'Manager': ['John', 'Rachel', 'Emily', 'Rachel']
}

# Dataset of employee project assignments
project_data = {
    'Employee': ['Alice', 'Charlie', 'Eve'],
    'Project': ['P1', 'P3', 'P2']
}

df1 = pd.DataFrame(employee_data)
df2 = pd.DataFrame(project_data)
df1

df2

merged_df = pd.merge(df1,df2,on='Employee',how='outer')
merged_df

"""**Question 13**"""

df = pd.read_csv("/content/Q13_sports_team_stats.csv")
df

df['WinRatio'] = (df['Wins']/df['GamesPlayed'])
df['Averagescores'] = df['Wins'].mean()
df

"""**Question 14**"""

df = pd.read_csv("/content/Q14_customer_purchases.csv")
df['Date'] = pd.to_datetime(df['Date'])
df['LoyaltyProgramSignUp'] = pd.to_datetime(df['LoyaltyProgramSignUp'])
df['Year'] = df['Date'].dt.year
df

"""**Question 15**"""

df = pd.read_csv("/content/Q15_student_grades.csv")
df

filtered_df = df.groupby('Subject').agg(
    avg_grade = ('Grade','mean'),
    max_grade = ('Grade','max'),
    min_grade = ('Grade','min')
)
filtered_df